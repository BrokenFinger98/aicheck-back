services:
  business:
    container_name: business
    build:
      context: ./business
      dockerfile: Dockerfile
    depends_on:
      discovery:
        condition: service_healthy
      aicheck-mysql:
        condition: service_healthy
    networks:
      - aicheck-network
    environment:
      SPRING_PROFILES_ACTIVE: default

  bank:
    container_name: bank
    build:
      context: ./bank
      dockerfile: Dockerfile
    depends_on:
      discovery:
        condition: service_healthy
      aicheck-mysql:
        condition: service_healthy
    networks:
      - aicheck-network
    environment:
      SPRING_PROFILES_ACTIVE: default
      DB_HOST: aicheck-mysql

  aicheck-mysql:
    image: mysql:8.0
    container_name: aicheck-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: "1234"
    ports:
      - "3307:3306"
    volumes:
      - ./db/mysql:/docker-entrypoint-initdb.d
      - mysql_data:/var/lib/mysql
    command: --skip-character-set-client-handshake
    networks:
      - aicheck-network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      timeout: 5s
      retries: 5

  discovery:
    container_name: discovery
    build:
      context: ./discovery
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - aicheck-network
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

  gateway:
    container_name: gateway
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - aicheck-network
    depends_on:
      discovery:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080/actuator/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5


volumes:
  mysql_data:
  mongo_data:

networks:
  aicheck-network:
    driver: bridge